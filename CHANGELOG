##0.5.4 (TODO)
- Call known deletions:
    + Adjust code to capture known deletions in alignment.
    + Report all types of variants.

##0.5.3
Major changes:
- Implement affine gap alignment strategy.
Minor changes:
- Stop searching minimum alignment if getting small enough cost.
- Do not call homopolymer indels.
- Stop Hamming distance when reaching the first mismatch.
- Fix a bug of taking quality for deletions.
- Change values for base cases in edit distance calculation.

##0.5.2
Major changes:
- Implement gap alignment algorithm outside of known variant locations.
Minor changes:
- Correct the positions of aligned bases.
- Fix bugs in forward gap edit distance.
- Add test cases for gap alignment trace back.

##0.5.1
- Compute alignment probability for mismatches only.
- Change prior prob for Indel calling.
- Change calculation of alignment prob at known snp locations.

##0.5
- Implement probabilistic alignment strategy.
    + Cost of substitution is calculated based on SNP profile at the postion and the base aligned to that position.
- Use updated SNP profile during alignment process.

##0.4.3
- Use all paired-seeds if there is no unique paired-seed.
    + Loop through several unique paired-seeds and find the alignment with minimum distance.
    + Stop if finding same ending pos of seeds after 3 iterations.
- Check minimum seed length when finding seeds.

##0.4.2
- Apply other filtering techniques for called SNPs.
    + Filter based on correct alignment probability during alignment process.
    + Filter based on number of SNPs, edit distance, and chromosomal distance for determining called SNPs.

##0.4.1
- Apply several filtering techniques for both alignment and SNP determination processes.
	+ Alignment: check for chromosomal distances of alignments of paired-ends reads and match strands of two ends.
	 (for Illumina technology, two ends of the reads should include forward and reverse ends).
	+ SNP calling: consider a cut-off quality to call SNPs, which is estimated based on input base quality
	 and assigned prior probabilities of SNP calls.

##0.4
- Call new SNPs (new Indels are not considered at this point).
	+ Detect mismatches between reads and multigenomes outside of known SNPs locations to discover new SNPs.
	+ Assign proper prior probabilities for new SNPs.

## 0.3.7
- Call SNPs and calculate SNP call quality during alignment phase.
    + Eliminate data structures for storing all possible SNPs during the alignment phase.
    + Eliminate functions for calling SNPs after the alignment phase.

## 0.3.6:
- Calculate SNP quality for SNP calls using Bayesian method.
    + Read allele frequency from reference SNP profile (VCF files).
    + Store all possible SNPs at each position found from read-multigenome alignment.
    + Calculate SNP quality based on Bayesian method.
- Improve running time by using goroutines to call SNPs.
- Make implementation more efficiently.
    + Use uint32 for positions of SNP calls.
    + Re-organize functions, remove redundant code.

## 0.3.5:
- Improve memory usage by using a memory-efficient version of fmi package for multigenome (use uint32 instead of int).
- Improve running time by using goroutines to load index (modify function Load() in fmi package).
- Improve user interface (main/index.go and main/isc.go).

## 0.3.4
- Use goroutines to process reads simultaneously:
    + One goroutine reads input files and put data to a data channel.
    + Other goroutines take data from the data channel and process them.
- Make several minor changes.

## 0.3.1
- Make several minor changes.
- Improve memory usage: put read info and alignment info into shared variables.
(Re-organize code: put related parameters and variables together in structs,
and put code for initializing memory to functions on structs.)

## 0.4
- Call new SNPs from alignment with known alleles (postponned)

## 0.3
- Use randomized algorithm with one index as the main strategy.

## 0.2.3
- Use deterministic search for alignment step.

## 0.2.2
- Use one index for alignment step.

## 0.2.1
- Add call SNPs quality calculation

## 0.2
- Work with pair-end reads. Consider reverse complement of reads.
- Add indexing phase to main program.
(Re-organize code, test modules, test data.)

## 0.1 Initial version
- Implement seed-and-extend strategy to align reads to the multi-genome. Work with
 single-end reads, no reverse complement. Allow only known SNPs.
- Implement algorithm to calculate distance between reads and the multi-genome.
- Build reference multi-genome
